machine:
  node:
    version: 4.1.0
dependencies:
  post:
    - bower install --force-latest
general:
  artifacts:
    - dist.tar.gz
deployment:
  staging:
    branch: /(feature|fix|chore).*/
    commands:
      - NODE_ENV=stage npm run ci-build && [ -d dist ]
      - npm run integration

      - echo $CI_PULL_REQUEST
      # We have mutiple stage environments, storage-stage-0.risevision.com, storage-stage-1.risevision.com ...
      # To deploy to one of these environments a tag must be added to the commit message. For instance, [stage-0] for storage-stage-0.risevision.com.
      # The build will fail if the tag is not added.
      # If tag is missing, the [stage-0] is used.
      - ssh storage@webserver-stage.risevision.com 'mkdir -p /rise-front-end/storage';
      - >
        STAGE_ENV="$(git log -1 --pretty=%B | grep '\[.*\]' |sed -e 's/.*\[\(.*\)\].*/\1/g')";
        if [ "$STAGE_ENV" != '' ]; then
          echo "Deploying to $STAGE_ENV";
        fi;
        if [ "$STAGE_ENV" == '' ]; then
          echo "stage deployment environment missing. Deploying to [stage-0].";
          STAGE_ENV='stage-0';
        fi;
        rsync -rptz -e ssh --delete dist storage@webserver-stage.risevision.com:/rise-front-end/storage/$STAGE_ENV;
      - tar czvf dist.tar.gz dist
  production:
    branch: master
    commands:
      - NODE_ENV=prod npm run ci-build && [ -d dist ]
      - npm run integration
      # It deploys to production server 2.
      - echo "deploying to production webserver1.risevision.com";
      - ssh storage@webserver1.risevision.com 'mkdir -p /rise-front-end/storage';
      - rsync -rptz -e ssh --delete dist storage@webserver1.risevision.com:/rise-front-end/storage;
      # It then deploys to production server 1.
      - echo "deploying to production webserver.risevision.com";
      - ssh storage@webserver.risevision.com 'mkdir -p /rise-front-end/storage';
      - rsync -rptz -e ssh --delete dist storage@webserver.risevision.com:/rise-front-end/storage;
      - tar czvf dist.tar.gz dist
